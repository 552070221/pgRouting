BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
-- one edge graph
SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id, source, target, cost FROM edge_table WHERE id = 1'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      2 |    1 |                      1 |                    1 |                      2 |                    1
(1 row)

-- two edge graphs
SELECT * FROM pgr_turnPenaltyGraph($$
    SELECT -id AS id, target, source, reverse_cost AS cost FROM edge_table WHERE id = 1
    UNION
    SELECT id, source, target, cost FROM edge_table WHERE id = 1
    $$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                      1 |                   -1 |                      2 |                   -1
   2 |      2 |      1 |    0 |                      1 |                    1 |                      1 |                   -1
   3 |      3 |      2 |    1 |                      2 |                    1 |                      1 |                    1
   4 |      4 |      3 |    0 |                      2 |                   -1 |                      2 |                    1
(4 rows)

SELECT * FROM pgr_turnPenaltyGraph($$
    SELECT id, target, source, reverse_cost AS cost FROM edge_table WHERE id = 1
    UNION
    SELECT -id AS id, source, target, cost FROM edge_table WHERE id = 1
    $$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                      2 |                   -1 |                      1 |                   -1
   2 |      2 |      1 |    0 |                      2 |                    1 |                      2 |                   -1
   3 |      3 |      2 |    1 |                      1 |                    1 |                      2 |                    1
   4 |      4 |      3 |    0 |                      1 |                   -1 |                      1 |                    1
(4 rows)

SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table WHERE id = 1'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      2 |      2 |    1 |                      1 |                    1 |                      1 |                    1
   2 |      2 |      4 |    1 |                      1 |                    1 |                      2 |                    1
   3 |      4 |      2 |    1 |                      2 |                    1 |                      1 |                    1
   4 |      4 |      4 |    1 |                      2 |                    1 |                      2 |                    1
(4 rows)

SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table WHERE id = 17'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      2 |      2 |    1 |                     14 |                   17 |                     14 |                   17
   2 |      2 |      4 |    1 |                     14 |                   17 |                     15 |                   17
   3 |      4 |      2 |    1 |                     15 |                   17 |                     14 |                   17
   4 |      4 |      4 |    1 |                     15 |                   17 |                     15 |                   17
(4 rows)

SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id*100 AS id, source*1000 as source, target*1000 as target , cost FROM edge_table WHERE id = 1'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      2 |    1 |                   1000 |                  100 |                   2000 |                  100
(1 row)

SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id*100 AS id, source*1000 as source, target*1000 as target , cost FROM edge_table WHERE id in (6,7)'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      3 |    1 |                   7000 |                  600 |                   8000 |                  600
   2 |      2 |      4 |    1 |                   8000 |                  700 |                   5000 |                  700
   3 |      3 |      2 |    0 |                   8000 |                  600 |                   8000 |                  700
(3 rows)

SELECT * FROM pgr_turnPenaltyGraph(
    'SELECT id*100 AS id, source*1000 as source, target*1000 as target , cost FROM edge_table where id in (5,9,11)'
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                   3000 |                  500 |                   6000 |                  500
   2 |      2 |      5 |    1 |                   6000 |                  900 |                   9000 |                  900
   3 |      3 |      6 |    1 |                   6000 |                 1100 |                  11000 |                 1100
   4 |      4 |      2 |    0 |                   6000 |                  500 |                   6000 |                  900
   5 |      4 |      3 |    0 |                   6000 |                  500 |                   6000 |                 1100
(5 rows)

ROLLBACK;
ROLLBACK
