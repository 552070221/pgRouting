# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.0.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 11:55-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../build/doc/flow-family.rst:11
msgid "Flow - Family of functions"
msgstr ""

#: ../../build/doc/flow-family.rst:15
msgid ""
":doc:`pgr_maxFlow` - Only the Max flow calculation using Push and Relabel"
" algorithm."
msgstr ""

#: ../../build/doc/flow-family.rst:16
msgid ""
":doc:`pgr_boykovKolmogorov` - Boykov and Kolmogorov with details of flow "
"on edges."
msgstr ""

#: ../../build/doc/flow-family.rst:17
msgid ""
":doc:`pgr_edmondsKarp` - Edmonds and Karp algorithm with details of flow "
"on edges."
msgstr ""

#: ../../build/doc/flow-family.rst:18
msgid ""
":doc:`pgr_pushRelabel` - Push and relabel algorithm with details of flow "
"on edges."
msgstr ""

#: ../../build/doc/flow-family.rst:19
msgid "Applications"
msgstr ""

#: ../../build/doc/flow-family.rst:21
msgid ""
":doc:`pgr_edgeDisjointPaths` - Calculates edge disjoint paths between two"
" groups of vertices."
msgstr ""

#: ../../build/doc/flow-family.rst:22
msgid ""
":doc:`pgr_maxCardinalityMatch` - Calculates a maximum cardinality "
"matching in a graph."
msgstr ""

#: ../../build/doc/flow-family.rst:39
msgid "Flow Functions General Information"
msgstr ""

#: ../../build/doc/flow-family.rst:43
msgid "**The main characteristics are:**"
msgstr ""

#: ../../build/doc/flow-family.rst:45
msgid "The graph is **directed**."
msgstr ""

#: ../../build/doc/flow-family.rst:46
msgid "Process is done only on edges with positive capacities."
msgstr ""

#: ../../build/doc/flow-family.rst:47
msgid ""
"When the maximum flow is 0 then there is no flow and **EMPTY SET** is "
"returned."
msgstr ""

#: ../../build/doc/flow-family.rst:49
msgid "There is no flow when a **source** is the same as a **target**."
msgstr ""

#: ../../build/doc/flow-family.rst:51
msgid "Any duplicated value in the source(s) or target(s) are ignored."
msgstr ""

#: ../../build/doc/flow-family.rst:52
msgid "Calculates the flow/residual capacity for each edge. In the output"
msgstr ""

#: ../../build/doc/flow-family.rst:54
msgid "Edges with zero flow are omitted."
msgstr ""

#: ../../build/doc/flow-family.rst:56
msgid ""
"Creates a **super source** and edges to all the source(s), and a **super "
"target** and the edges from all the targets(s)."
msgstr ""

#: ../../build/doc/flow-family.rst:57
msgid ""
"The maximum flow through the graph is guaranteed to be the value returned"
" by :doc:`pgr_maxFlow <pgr_maxFlow>` when executed with the same "
"parameters and can be calculated:"
msgstr ""

#: ../../build/doc/flow-family.rst:59
msgid "By aggregation of the outgoing flow from the sources"
msgstr ""

#: ../../build/doc/flow-family.rst:60
msgid "By aggregation of the incoming flow to the targets"
msgstr ""

#: ../../build/doc/flow-family.rst:65
msgid ""
":doc:`pgr_maxFlow <pgr_maxFlow>`  is the  maximum Flow and that maximum "
"is guaranteed to be the same on the functions :doc:`pgr_pushRelabel "
"<pgr_pushRelabel>`, :doc:`pgr_edmondsKarp <pgr_edmondsKarp>`, "
":doc:`pgr_boykovKolmogorov <pgr_boykovKolmogorov>`, but the actual flow "
"through each edge may vary."
msgstr ""

#: ../../build/doc/flow-family.rst:70
msgid "Adcanced Documentation"
msgstr ""

#: ../../build/doc/flow-family.rst:72
msgid ""
"A flow network is a directed graph where each edge has a capacity and a "
"flow. The flow through an edge must not exceed the capacity of the edge. "
"Additionally, the incoming and outgoing flow of a node must be equal "
"except the for source which only has outgoing flow, and the "
"destination(sink) which only has incoming flow."
msgstr ""

#: ../../build/doc/flow-family.rst:76
msgid ""
"Maximum flow algorithms calculate the maximum flow through the graph and "
"the flow of each edge."
msgstr ""

#: ../../build/doc/flow-family.rst:78
msgid ""
"The maximum flow through the graph is guaranteed to be the same with all "
"implementations, but the actual flow through each edge may vary. Given "
"the following query:"
msgstr ""

#: ../../build/doc/flow-family.rst:82
msgid "pgr_maxFlow :math:`(edges\\_sql, source\\_vertex, sink\\_vertex)`"
msgstr ""

#: ../../build/doc/flow-family.rst:84
msgid ""
"where :math:`edges\\_sql = \\{(id_i, source_i, target_i, capacity_i, "
"reverse\\_capacity_i)\\}`"
msgstr ""

#: ../../build/doc/flow-family.rst:87
msgid "Graph definition"
msgstr ""

#: ../../build/doc/flow-family.rst:88
msgid "The weighted directed graph, :math:`G(V,E)`, is defined as:"
msgstr ""

#: ../../build/doc/flow-family.rst:90
msgid "the set of vertices  :math:`V`"
msgstr ""

#: ../../build/doc/flow-family.rst:92
msgid ""
":math:`source\\_vertex  \\cup  sink\\_vertex  \\bigcup  source_i  "
"\\bigcup  target_i`"
msgstr ""

#: ../../build/doc/flow-family.rst:94
msgid "the set of edges :math:`E`"
msgstr ""

#: ../../build/doc/flow-family.rst:96
msgid ""
":math:`E = \\begin{cases} \\text{ } \\{(source_i, target_i, capacity_i) "
"\\text{ when } capacity > 0 \\} & \\quad  \\text{ if } reverse\\_capacity"
" = \\varnothing \\\\ \\text{ } & \\quad \\text{ } \\\\ \\{(source_i, "
"target_i, capacity_i) \\text{ when } capacity > 0 \\} & \\text{ } \\\\ "
"\\cup \\{(target_i, source_i, reverse\\_capacity_i) \\text{ when } "
"reverse\\_capacity_i > 0)\\} & \\quad \\text{ if } reverse\\_capacity "
"\\neq \\varnothing \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/flow-family.rst:104
msgid "Maximum flow problem"
msgstr ""

#: ../../build/doc/flow-family.rst:105
msgid "Given:"
msgstr ""

#: ../../build/doc/flow-family.rst:108
msgid ":math:`G(V,E)`"
msgstr ""

#: ../../build/doc/flow-family.rst:109
msgid ":math:`source\\_vertex \\in V` the source vertex"
msgstr ""

#: ../../build/doc/flow-family.rst:110
msgid ":math:`sink\\_vertex \\in V` the sink vertex"
msgstr ""

#: ../../build/doc/flow-family.rst:112
msgid "Then:"
msgstr ""

#: ../../build/doc/flow-family.rst:114
msgid ":math:`pgr\\_maxFlow(edges\\_sql, source, sink) = \\boldsymbol{\\Phi}`"
msgstr ""

#: ../../build/doc/flow-family.rst:116
msgid ""
":math:`\\boldsymbol{\\Phi} = {(id_i, edge\\_id_i, source_i, target_i, "
"flow_i, residual\\_capacity_i)}`"
msgstr ""

#: ../../build/doc/flow-family.rst:118
msgid "Where:"
msgstr ""

#: ../../build/doc/flow-family.rst:120
msgid ""
":math:`\\boldsymbol{\\Phi}` is a subset of the original edges with their "
"residual capacity and flow. The maximum flow through the graph can be "
"obtained by aggregating on the source or sink and summing the flow "
"from/to it. In particular:"
msgstr ""

#: ../../build/doc/flow-family.rst:122
msgid ":math:`id_i = i`"
msgstr ""

#: ../../build/doc/flow-family.rst:123
msgid ":math:`edge\\_id = id_i` in edges_sql"
msgstr ""

#: ../../build/doc/flow-family.rst:124
msgid ":math:`residual\\_capacity_i = capacity_i - flow_i`"
msgstr ""

#: ../../build/doc/flow-family.rst:128
msgid "See Also"
msgstr ""

#: ../../build/doc/flow-family.rst:130
msgid "https://en.wikipedia.org/wiki/Maximum_flow_problem"
msgstr ""

#: ../../build/doc/flow-family.rst:133
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/flow-family.rst:134
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/flow-family.rst:135
msgid ":ref:`search`"
msgstr ""

