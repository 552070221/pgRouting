# 
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-02 12:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/tutorial/analytics.rst:13
msgid "Graph Analytics"
msgstr ""

#: ../../src/tutorial/analytics.rst:15
msgid "Stephen Woodbridge <woodbri@swoodbridge.com>"
msgstr ""

#: ../../src/tutorial/analytics.rst:16
msgid ""
"Stephen Woodbridge. The source code is released under the MIT-X license."
msgstr ""

#: ../../src/tutorial/analytics.rst:20
msgid "Overview"
msgstr ""

#: ../../src/tutorial/analytics.rst:22
msgid ""
"It is common to find problems with graphs that have not been constructed "
"fully noded or in graphs with zlevels at intersection that have been entered"
" incorrectly. An other problem is oneway streets that have been entered in "
"the wrong direction. We can not detect errors with respect to \"ground\" "
"truth, but we can look for inconsistencies and some anomalies in a graph and"
" report them for additional inspections."
msgstr ""

#: ../../src/tutorial/analytics.rst:24
msgid ""
"We do not current have any visualization tools for these problems, but I "
"have used mapserver to render the graph and highlight potential problem "
"areas. Someone familar with graphviz might contribute tools for generating "
"images with that."
msgstr ""

#: ../../src/tutorial/analytics.rst:28
msgid "Analyze a Graph"
msgstr ""

#: ../../src/tutorial/analytics.rst:30
msgid "With :ref:`pgr_analyze_graph` the graph can be checked for errors."
msgstr ""

#: ../../src/tutorial/analytics.rst:37
msgid ""
"After the analyzing the graph, deadends are indentified by ``cnt=1`` in the "
"\"vertices_tmp\" table and potential problems are identified with ``chk=1``."
msgstr ""

#: ../../src/tutorial/analytics.rst:44
msgid ""
"If you have isolated road segments, for example, a segment where both ends "
"are deadends. you can find these with the following query:"
msgstr ""

#: ../../src/tutorial/analytics.rst:53
msgid ""
"If you want to visualize these on a graphic image, then you can use "
"something like mapserver to render the edges and the vertices and style "
"based on ``cnt`` or if they are isolated, etc. You can also do this with a "
"tool like graphviz, or geoserver or other similar tools."
msgstr ""

#: ../../src/tutorial/analytics.rst:57
msgid "Analyze One Way Streets"
msgstr ""

#: ../../src/tutorial/analytics.rst:59
msgid ""
":ref:`pgr_analyze_oneway` analyzes oneway streets in a graph and identifies "
"any flipped segments. Basically if you count the edges coming into a node "
"and the edges exiting a node the number has to be greater than one."
msgstr ""

#: ../../src/tutorial/analytics.rst:61
msgid ""
"This query will add two columns to the vertices_tmp table ``ein int`` and "
"``eout int`` and populate it with the appropriate counts. After running this"
" on a graph you can identify nodes with potential problems with the "
"following query."
msgstr ""

#: ../../src/tutorial/analytics.rst:68
msgid ""
"The rules are defined as an array of text strings that if match the ``col`` "
"value would be counted as true for the source or target in or out condition."
msgstr ""

#: ../../src/tutorial/analytics.rst:72
msgid "Example"
msgstr ""

#: ../../src/tutorial/analytics.rst:74
msgid ""
"Lets assume we have a table \"st\" of edges and a column \"one_way\" that "
"might have values like:"
msgstr ""

#: ../../src/tutorial/analytics.rst:76
msgid "'FT'    - oneway from the source to the target node."
msgstr ""

#: ../../src/tutorial/analytics.rst:77
msgid "'TF'    - oneway from the target to the source node."
msgstr ""

#: ../../src/tutorial/analytics.rst:78
msgid "'B'     - two way street."
msgstr ""

#: ../../src/tutorial/analytics.rst:79
msgid "''      - empty field, assume twoway."
msgstr ""

#: ../../src/tutorial/analytics.rst:80
msgid "<NULL>  - NULL field, use two_way_if_null flag."
msgstr ""

#: ../../src/tutorial/analytics.rst:82
msgid ""
"Then we could form the following query to analyze the oneway streets for "
"errors."
msgstr ""

#: ../../src/tutorial/analytics.rst:101
msgid ""
"Typically these problems are generated by a break in the network, the oneway"
" direction set wrong, maybe an error releted to zlevels or a network that is"
" not properly noded."
msgstr ""

#: ../../src/tutorial/analytics.rst:103
msgid ""
"The above tools do not detect all network issues, but they will identify "
"some common problems. There are other problems that are hard to detect "
"because they are more global in nature like multiple disconnected networks. "
"Think of an island with a road network that is not connected to the mainland"
" network because the bridge ot ferry routes are missing."
msgstr ""

#: ../../src/tutorial/analytics.rst:107
msgid "See Also"
msgstr ""

#: ../../src/tutorial/analytics.rst:109
msgid ":ref:`pgr_analyze_graph`"
msgstr ""

#: ../../src/tutorial/analytics.rst:110
msgid ":ref:`pgr_analyze_oneway`"
msgstr ""

#: ../../src/tutorial/analytics.rst:111
msgid ":ref:`pgr_node_network`"
msgstr ""
