# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version 2.0.0-dev (c11a3d8 develop)
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-02 12:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../src/kdijkstra/doc/index.rst:13
# d0e70471835a45ffaf61908b2d215a88
msgid "pgr_kDijkstra - Mutliple destination Shortest Path Dijkstra"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:21
# 3dc68ebc6668403894110665304f16f4
msgid "Name"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:23
# 654039f9511e4435bd8b03f7498bed31
msgid "``pgr_kdijkstraCost`` - Returns the costs for K shortest paths using Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:24
# 5f505b210bac4235ac2c669788ac6c98
msgid "``pgr_kdijkstraPath`` - Returns the paths for K shortest paths using Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:28
# 08bc395ad70c4fc6a99531cd99b7fdad
msgid "Synopsis"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:30
# 77e465d7626d423e8fd0b0791bcd558a
msgid "These functions allow you to have a single start node and multiple destination nodes and will compute the routes to all the destinations from the source node. Returns a set of :ref:`pgr_costResult3 <type_cost_result3>` or :ref:`pgr_costResult3 <type_cost_result3>`. ``pgr_kdijkstraCost`` returns one record for each destination node and the cost is the total code of the route to that node. ``pgr_kdijkstraPath`` returns one record for every edge in that path from source to destination and the cost is to traverse that edge."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:42
# b72473bf8a0a45308d56145750a903c0
msgid "Description"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:44
# fc31fc13a43244489c868e488b581a42
msgid "a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:51
# 1030e0f2f5d440b796d85e2301a2f770
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:52
# 8ff3b80eaa8449819e733d8cdf246560
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:53
# 412c17706e5743779111778c18482525
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:54
# bdcc416ce07c495cafc212bd8afba5f3
msgid "``float8`` value, of the edge traversal cost. A negative cost will prevent the edge from being inserted in the graph."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:55
# c94fed0f376f4522ad3da8e3932f5776
msgid "(optional) the cost for the reverse traversal of the edge. This is only used when the ``directed`` and ``has_rcost`` parameters are ``true`` (see the above remark about negative costs)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:57
# 750d70173030499b8dd6b030cf624fbd
msgid "``int4`` id of the start point"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:58
# aae0378b75f842cf9520f28d26b65411
msgid "``int4[]`` an array of ids of the end points"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:59
# 3019d17cb6424df89731ac58dad7b30b
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:60
# 7a635fc0c6b44a38b68079e239e82f51
msgid "if ``true``, the ``reverse_cost`` column of the SQL generated set of rows will be used for the cost of the traversal of the edge in the opposite direction."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:63
# 80ba2b1ca7da4c38949d37c7b6a12847
msgid "``pgr_kdijkstraCost`` returns set of :ref:`type_cost_result`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:65
#: ../../../src/kdijkstra/doc/index.rst:73
# e500ab01ec3f405bbbafe8eb5163a10c
# 26f42441c0c246aeb0694e29e88829e7
msgid "row sequence"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:66
# 38d11abdb53949b9854fafaacd93c6ae
msgid "path vertex source id (this will always be source start point in the query)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:67
# 7e6ceaded5d545cf9f944d2bbbe1f4f7
msgid "path vertex target id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:68
# d668704a393e4b4d90b8efec99fb51cd
msgid "cost to traverse the path from ``id1`` to ``id2``. Cost will be -1.0 if there is no path to that target vertex id."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:71
# bea8dcb539504e71814714a0b300fe30
msgid "``pgr_kdijkstraPath`` returns set of :ref:`type_cost_result3`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:74
# 4e4af47b17f04a0a9cb43d75593a815b
msgid "path target id (identifies the target path)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:75
# f7d1ef87a92346eab34bcd7a4c07e106
msgid "path edge target node id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:76
# d3e41305ab6648339551c01d501168f3
msgid "path edge id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:77
# 4235abc58c9f4df1a9b8c346953efed4
msgid "cost to traverse this edge or -1.0 if there is no path to this target"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:81
# 33d9e64c327540538f9f0277442831ed
msgid "History"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:82
# aab28fd5ebce4e9e9f31db9fb57688eb
msgid "New in version 2.0.0"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:86
# 797b5b7a38b1457488d4afe003a51273
msgid "Examples"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:88
# 06a8864e86954c3aac2d5e11b1a8c1ef
msgid "Returning a ``cost`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:121
# 125d93914a1543e1a1baf4d8db79d020
msgid "Returning a ``path`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:142
# a166e752718e43bea2ef06cff7518436
msgid "There is no assurance that the result above will be ordered in the direction of flow of the route, ie: it might be reversed. You will need to check if ``st_startPoint()`` of the route is the same as the start node location and if it is not then call ``st_reverse()`` to reverse the direction of the route. This behavior is a function of PostGIS functions ``st_linemerge()`` and ``st_union()`` and not pgRouting."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:151
# f1203170216c4288979176106fe4eb0f
msgid "See Also"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:153
# 3347de9159114d40bc5f79630e1054ee
msgid ":ref:`type_cost_result`"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:154
# 8bc358939bd543afbc3210be6c5b8495
msgid "http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
# a8386aa9e5f04b8b81bec1b788151a32
msgid "pgr_kDijkstraCost(text,integer,integer[],boolean,boolean)"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
# a8386aa9e5f04b8b81bec1b788151a32
msgid "pgr_kDijkstraPath(text,integer,integer[],boolean,boolean)"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
# a8386aa9e5f04b8b81bec1b788151a32
msgid "dijkstra"
msgstr ""

