# 
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-02 12:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/developer/index.rst:13
msgid "Developer's Guide"
msgstr ""

#: ../../src/developer/index.rst:16
msgid ""
"All documentation should be in reStructuredText format. See: "
"<http://docutils.sf.net/rst.html> for introductory docs."
msgstr ""

#: ../../src/developer/index.rst:20
msgid "Source Tree Layout"
msgstr ""

#: ../../src/developer/index.rst:23
msgid "cmake/"
msgstr ""

#: ../../src/developer/index.rst:23
msgid "cmake scripts used as part of our build system."
msgstr ""

#: ../../src/developer/index.rst:28
msgid "core/"
msgstr ""

#: ../../src/developer/index.rst:26
msgid ""
"This is the algorithm source tree. Each alogorithm should be contained in "
"its on sub-tree with doc, sql, src, and test sub-directories. This might get"
" renamed to \"algorithms\" at some point."
msgstr ""

#: ../../src/developer/index.rst:33
msgid "core/astar/"
msgstr ""

#: ../../src/developer/index.rst:31
msgid ""
"This is an implementation of A* Search based on using Boost Graph libraries "
"for its implementation. This is a Dijkstra shortest path implementation with"
" a Euclidean Heuristic."
msgstr ""

#: ../../src/developer/index.rst:39
msgid "core/common/"
msgstr ""

#: ../../src/developer/index.rst:36
msgid ""
"At the moment this does not have an core in \"src\", but does have a lot of "
"SQL wrapper code and topology code in the \"sql\" directory. *Algorithm "
"specific wrappers should get move to the algorithm tree and appropriate "
"tests should get added to validate the wrappers.*"
msgstr ""

#: ../../src/developer/index.rst:43
msgid "core/dijkstra/"
msgstr ""

#: ../../src/developer/index.rst:42
msgid ""
"This is an implementation of Dikjstra's shortest path solution using Boost "
"Graph libraries for the implementation."
msgstr ""

#: ../../src/developer/index.rst:49
msgid "core/driving_distance/"
msgstr ""

#: ../../src/developer/index.rst:46
msgid ""
"This optional package creates driving distance polygons based on solving a "
"Dijkstra shortest path solution, then creating polygons based on equal cost "
"distances from the start point. This optional package requires CGAL "
"libraries to be installed."
msgstr ""

#: ../../src/developer/index.rst:56
msgid "core/shooting_star/"
msgstr ""

#: ../../src/developer/index.rst:52
msgid ""
"*DEPRECATED and DOES NOT WORK and IS BEING REMOVED* This is an edge based "
"shortest path algorithm that supports turn restrictions. It is based on "
"Boost Graph. Do *NOT* use this algorithm as it is broken, instead use *trsp*"
" which has the same functionality and is faster and give correct results."
msgstr ""

#: ../../src/developer/index.rst:62
msgid "core/trsp/"
msgstr ""

#: ../../src/developer/index.rst:59
msgid ""
"This is a turn restricted shortest path algorithm. It has some nice features"
" like you can specify the start and end points as a percentage along an "
"edge. Restrictions are stored in a separate table from the graph edges and "
"this make it easier to manage the data."
msgstr ""

#: ../../src/developer/index.rst:67
msgid "core/tsp/"
msgstr ""

#: ../../src/developer/index.rst:65
msgid ""
"This optional package provides the ability to compute traveling salesman "
"problem solutions and compute the resulting route. This optional package "
"requires GAUL libaries to be installed."
msgstr ""

#: ../../src/developer/index.rst:70
msgid "tools/"
msgstr ""

#: ../../src/developer/index.rst:70
msgid "Miscellaneous scripts and tools."
msgstr ""

#: ../../src/developer/index.rst:75
msgid "lib/"
msgstr ""

#: ../../src/developer/index.rst:73
msgid ""
"This is the output directory where compiled libraries and installation "
"targets are staged before installation."
msgstr ""

#: ../../src/developer/index.rst:78
msgid "Documentation Layout"
msgstr ""

#: ../../src/developer/index.rst:80
msgid ""
"*As noted above all documentation should be done using reStructuredText "
"formated files.*"
msgstr ""

#: ../../src/developer/index.rst:83
msgid ""
"Documentation is distributed into the source tree. This top level \"doc\" "
"directory is intended for high level documentation cover subjects like:"
msgstr ""

#: ../../src/developer/index.rst:86
msgid "Compiling and testing"
msgstr ""

#: ../../src/developer/index.rst:87
msgid "Installation"
msgstr ""

#: ../../src/developer/index.rst:88
msgid "Tutorials"
msgstr ""

#: ../../src/developer/index.rst:89
msgid "Users' Guide front materials"
msgstr ""

#: ../../src/developer/index.rst:90
msgid "Reference Manual front materials"
msgstr ""

#: ../../src/developer/index.rst:91
msgid "etc"
msgstr ""

#: ../../src/developer/index.rst:93
msgid ""
"Since the algorithm specific documentation is contained in the source tree "
"with the algorithm specific files, the process of building the documentation"
" and publishing it will need to assemble the details with the front material"
" as needed."
msgstr ""

#: ../../src/developer/index.rst:98
msgid ""
"Also, to keep the \"doc\" directory from getting cluttered, each major book "
"like those listed above, should be contained in a separate directory under "
"\"doc\". Any images or other materials related to the book should also be "
"kept in that directory."
msgstr ""

#: ../../src/developer/index.rst:105
msgid "Testing Infrastructure"
msgstr ""

#: ../../src/developer/index.rst:107
msgid ""
"There is a very basic testing infrastructure put in place. Here are the "
"basics of how it works. We need more test cases. Longer term we should "
"probably get someone to setup travis-ci or jenkins testing frameworks."
msgstr ""

#: ../../src/developer/index.rst:111
msgid "Here is the graph for the TRSP tests."
msgstr ""

#: ../../src/developer/index.rst:115
msgid ""
"Tests are run via the script at the top level tools/test-runner.pl and it "
"runs all the test configured tests and at the moment just dumps the results "
"structure of the test. This can be prettied up later."
msgstr ""

#: ../../src/developer/index.rst:119
msgid ""
"It also assumes that you have installed the libraries as it tests using the "
"installed postgresql. This probably needs to be made smarter so we can test "
"out of the build tree. I'll need to think about that."
msgstr ""

#: ../../src/developer/index.rst:124
msgid ""
"Basically each .../test/ directory should include one *test.conf* file that "
"is a perl script fragment that defines what data files to load and what "
"tests to run. I have built in some mechanisms to allow test and data to be "
"pg version and postgis version specific, but I'm not using that yet. So for "
"example, *core/trsp/test/test-any-00.data* is a sql plain text dump that "
"will load and needed data for a set of tests. This is also the graph in the "
"image above. You can specify multiple files to load, but as a group they "
"need to have unique names."
msgstr ""

#: ../../src/developer/index.rst:133
msgid ""
"core/trsp/test/test-any-00.test is a sql command to be run. It will get run "
"as:"
msgstr ""

#: ../../src/developer/index.rst:141
msgid "Then if there is a difference then an test failure is reported."
msgstr ""
