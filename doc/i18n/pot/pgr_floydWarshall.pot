# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v2.5.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v2.5.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-25 12:08-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../pgr_floydWarshall.rst:13
msgid "pgr_floydWarshall"
msgstr ""

#: ../../pgr_floydWarshall.rst:16
msgid "Synopsis"
msgstr ""

#: ../../pgr_floydWarshall.rst:18
msgid "``pgr_floydWarshall`` - Returns the sum of the costs of the shortest path for each pair of nodes in the graph using Floyd-Warshall algorithm."
msgstr ""

#: ../../pgr_floydWarshall.rst:24
msgid "Boost Graph Inside"
msgstr ""

#: ../../pgr_floydWarshall.rst:27
msgid "Availability: 2.0.0"
msgstr ""

#: ../../pgr_floydWarshall.rst:28
msgid "Renamed on 2.2.0, previous name pgr_apspWarshall"
msgstr ""

#: ../../pgr_floydWarshall.rst:31
msgid "The Floyd-Warshall algorithm, also known as Floyd's algorithm, is a good choice to calculate the sum of the costs of the shortest path for each pair of nodes in the graph, for *dense graphs*. We make use of the  Boost's implementation which runs in :math:`\\Theta(V^3)` time,"
msgstr ""

#: ../../pgr_floydWarshall.rst:38
msgid "Characteristics"
msgstr ""

#: ../../pgr_floydWarshall.rst:58
msgid "The main Characteristics are:"
msgstr ""

#: ../../pgr_floydWarshall.rst:41
msgid "It does not return a path."
msgstr ""

#: ../../pgr_floydWarshall.rst:42
msgid "Returns the sum of the costs of the shortest path for each pair of nodes in the graph."
msgstr ""

#: ../../pgr_floydWarshall.rst:43
msgid "Process is done only on edges with positive costs."
msgstr ""

#: ../../pgr_floydWarshall.rst:44
msgid "Boost returns a :math:`V \\times V` matrix, where the infinity values. Represent the distance between vertices for which there is no path."
msgstr ""

#: ../../pgr_floydWarshall.rst:47
msgid "We return only the non infinity values in form of a set of `(start_vid, end_vid, agg_cost)`."
msgstr ""

#: ../../pgr_floydWarshall.rst:49
msgid "Let be the case the values returned are stored in a table, so the unique index would be the pair: `(start_vid, end_vid)`."
msgstr ""

#: ../../pgr_floydWarshall.rst:52
msgid "For the undirected graph, the results are symmetric."
msgstr ""

#: ../../pgr_floydWarshall.rst:54
msgid "The  `agg_cost` of `(u, v)` is the same as for `(v, u)`."
msgstr ""

#: ../../pgr_floydWarshall.rst:56
msgid "When  `start_vid` = `end_vid`, the `agg_cost` = 0."
msgstr ""

#: ../../pgr_floydWarshall.rst:58
msgid "**Recommended, use a bounding box of no more than 3500 edges.**"
msgstr ""

#: ../../pgr_floydWarshall.rst:61
msgid "Signature Summary"
msgstr ""

#: ../../pgr_floydWarshall.rst:70
msgid "Signatures"
msgstr ""

#: ../../pgr_floydWarshall.rst:77
msgid "Minimal Signature"
msgstr ""

#: ../../pgr_floydWarshall.rst:0
msgid "Example 1"
msgstr ""

#: ../../pgr_floydWarshall.rst:84
msgid "On a directed graph."
msgstr ""

#: ../../pgr_floydWarshall.rst:95
msgid "Complete Signature"
msgstr ""

#: ../../pgr_floydWarshall.rst:0
msgid "Example 2"
msgstr ""

#: ../../pgr_floydWarshall.rst:103
msgid "On an undirected graph."
msgstr ""

#: ../../pgr_floydWarshall.rst:110
msgid "Description of the Signatures"
msgstr ""

#: ../../pgRouting-concepts.rst:4
msgid "Description of the edges_sql query (id is not necessary)"
msgstr ""

#: ../../pgRouting-concepts.rst:0
msgid "edges_sql"
msgstr ""

#: ../../pgRouting-concepts.rst:6
msgid "an SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../pgRouting-concepts.rst:9
#: ../../pgr_floydWarshall.rst:136
msgid "Column"
msgstr ""

#: ../../pgRouting-concepts.rst:9
#: ../../pgr_floydWarshall.rst:123
#: ../../pgr_floydWarshall.rst:136
msgid "Type"
msgstr ""

#: ../../pgRouting-concepts.rst:9
msgid "Default"
msgstr ""

#: ../../pgRouting-concepts.rst:9
#: ../../pgr_floydWarshall.rst:123
#: ../../pgr_floydWarshall.rst:136
msgid "Description"
msgstr ""

#: ../../pgRouting-concepts.rst:11
msgid "**source**"
msgstr ""

#: ../../pgRouting-concepts.rst:11
#: ../../pgRouting-concepts.rst:12
msgid "``ANY-INTEGER``"
msgstr ""

#: ../../pgRouting-concepts.rst:11
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../pgRouting-concepts.rst:12
msgid "**target**"
msgstr ""

#: ../../pgRouting-concepts.rst:12
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../pgRouting-concepts.rst:13
msgid "**cost**"
msgstr ""

#: ../../pgRouting-concepts.rst:13
#: ../../pgRouting-concepts.rst:17
msgid "``ANY-NUMERICAL``"
msgstr ""

#: ../../pgRouting-concepts.rst:13
msgid "Weight of the edge  `(source, target)`"
msgstr ""

#: ../../pgRouting-concepts.rst:15
msgid "When negative: edge `(source, target)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../pgRouting-concepts.rst:17
msgid "**reverse_cost**"
msgstr ""

#: ../../pgRouting-concepts.rst:17
msgid "-1"
msgstr ""

#: ../../pgRouting-concepts.rst:17
msgid "Weight of the edge `(target, source)`,"
msgstr ""

#: ../../pgRouting-concepts.rst:19
msgid "When negative: edge `(target, source)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../pgRouting-concepts.rst:23
msgid "Where:"
msgstr ""

#: ../../pgRouting-concepts.rst:0
msgid "ANY-INTEGER"
msgstr ""

#: ../../pgRouting-concepts.rst:25
msgid "SMALLINT, INTEGER, BIGINT"
msgstr ""

#: ../../pgRouting-concepts.rst:0
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../pgRouting-concepts.rst:26
msgid "SMALLINT, INTEGER, BIGINT, REAL, FLOAT"
msgstr ""

#: ../../pgr_floydWarshall.rst:118
msgid "Description of the parameters of the signatures"
msgstr ""

#: ../../pgr_floydWarshall.rst:120
msgid "Receives  ``(edges_sql, directed)``"
msgstr ""

#: ../../pgr_floydWarshall.rst:123
msgid "Parameter"
msgstr ""

#: ../../pgr_floydWarshall.rst:125
msgid "**edges_sql**"
msgstr ""

#: ../../pgr_floydWarshall.rst:125
msgid "``TEXT``"
msgstr ""

#: ../../pgr_floydWarshall.rst:125
msgid "SQL query as described above."
msgstr ""

#: ../../pgr_floydWarshall.rst:126
msgid "**directed**"
msgstr ""

#: ../../pgr_floydWarshall.rst:126
msgid "``BOOLEAN``"
msgstr ""

#: ../../pgr_floydWarshall.rst:126
msgid "(optional) Default is true (is directed). When set to false the graph is considered as Undirected"
msgstr ""

#: ../../pgr_floydWarshall.rst:131
msgid "Description of the return values"
msgstr ""

#: ../../pgr_floydWarshall.rst:133
msgid "Returns set of ``(start_vid, end_vid, agg_cost)``"
msgstr ""

#: ../../pgr_floydWarshall.rst:138
msgid "**start_vid**"
msgstr ""

#: ../../pgr_floydWarshall.rst:138
#: ../../pgr_floydWarshall.rst:139
msgid "``BIGINT``"
msgstr ""

#: ../../pgr_floydWarshall.rst:138
msgid "Identifier of the starting vertex."
msgstr ""

#: ../../pgr_floydWarshall.rst:139
msgid "**end_vid**"
msgstr ""

#: ../../pgr_floydWarshall.rst:139
msgid "Identifier of the ending vertex."
msgstr ""

#: ../../pgr_floydWarshall.rst:140
msgid "**agg_cost**"
msgstr ""

#: ../../pgr_floydWarshall.rst:140
msgid "``FLOAT``"
msgstr ""

#: ../../pgr_floydWarshall.rst:140
msgid "Total cost from ``start_vid`` to ``end_vid``."
msgstr ""

#: ../../pgr_floydWarshall.rst:148
msgid "History"
msgstr ""

#: ../../pgr_floydWarshall.rst:149
msgid "Re-design of pgr_apspWarshall in Version 2.2.0"
msgstr ""

#: ../../pgr_floydWarshall.rst:152
msgid "See Also"
msgstr ""

#: ../../pgr_floydWarshall.rst:154
msgid ":ref:`pgr_johnson`"
msgstr ""

#: ../../pgr_floydWarshall.rst:155
msgid "`Boost floyd-Warshall <http://www.boost.org/libs/graph/doc/floyd_warshall_shortest.html>`_ algorithm"
msgstr ""

#: ../../pgr_floydWarshall.rst:156
msgid "Queries uses the :ref:`sampledata` network."
msgstr ""

#: ../../pgr_floydWarshall.rst:159
msgid "Indices and tables"
msgstr ""

#: ../../pgr_floydWarshall.rst:160
msgid ":ref:`genindex`"
msgstr ""

#: ../../pgr_floydWarshall.rst:161
msgid ":ref:`search`"
msgstr ""

