# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v2.5.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v2.5.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-30 08:52-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../pgr_trsp.rst:13
msgid "pgr_trsp - Turn Restriction Shortest Path (TRSP)"
msgstr ""

#: ../../pgr_trsp.rst:22
msgid "Name"
msgstr ""

#: ../../pgr_trsp.rst:24
msgid ""
"``pgr_trsp`` â€” Returns the shortest path with support for turn "
"restrictions."
msgstr ""

#: ../../pgr_trsp.rst:28
msgid "Synopsis"
msgstr ""

#: ../../pgr_trsp.rst:30
msgid ""
"The turn restricted shorthest path (TRSP) is a shortest path algorithm "
"that can optionally take into account complicated turn restrictions like "
"those found in real world navigable road networks. Performamnce wise it "
"is nearly as fast as the A* search but has many additional features like "
"it works with edges rather than the nodes of the network. Returns a set "
"of :ref:`pgr_costResult <type_cost_result>` (seq, id1, id2, cost) rows, "
"that make up a path."
msgstr ""

#: ../../pgr_trsp.rst:57
msgid "Description"
msgstr ""

#: ../../pgr_trsp.rst:59
msgid ""
"The Turn Restricted Shortest Path algorithm (TRSP) is similar to the "
"shooting star in that you can specify turn restrictions."
msgstr ""

#: ../../pgr_trsp.rst:61
msgid ""
"The TRSP setup is mostly the same as :ref:`Dijkstra shortest path "
"<pgr_dijkstra>` with the addition of an optional turn restriction table. "
"This provides an easy way of adding turn restrictions to a road network "
"by placing them in a separate table."
msgstr ""

#: ../../pgr_trsp.rst
msgid "sql"
msgstr ""

#: ../../pgr_trsp.rst:64 ../../pgr_trsp.rst:120
msgid "a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../pgr_trsp.rst
msgid "id"
msgstr ""

#: ../../pgr_trsp.rst:71 ../../pgr_trsp.rst:127
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../pgr_trsp.rst
msgid "source"
msgstr ""

#: ../../pgr_trsp.rst:72 ../../pgr_trsp.rst:128
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../pgr_trsp.rst
msgid "target"
msgstr ""

#: ../../pgr_trsp.rst:73 ../../pgr_trsp.rst:129
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../pgr_trsp.rst
msgid "cost"
msgstr ""

#: ../../pgr_trsp.rst:74 ../../pgr_trsp.rst:130
msgid ""
"``float8`` value, of the edge traversal cost. A negative cost will "
"prevent the edge from being inserted in the graph."
msgstr ""

#: ../../pgr_trsp.rst
msgid "reverse_cost"
msgstr ""

#: ../../pgr_trsp.rst:75 ../../pgr_trsp.rst:131
msgid ""
"(optional) the cost for the reverse traversal of the edge. This is only "
"used when the ``directed`` and ``has_rcost`` parameters are ``true`` (see"
" the above remark about negative costs)."
msgstr ""

#: ../../pgr_trsp.rst:77
msgid "``int4`` **NODE id** of the start point"
msgstr ""

#: ../../pgr_trsp.rst:78
msgid "``int4`` **NODE id** of the end point"
msgstr ""

#: ../../pgr_trsp.rst
msgid "directed"
msgstr ""

#: ../../pgr_trsp.rst:79 ../../pgr_trsp.rst:134
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../pgr_trsp.rst
msgid "has_rcost"
msgstr ""

#: ../../pgr_trsp.rst:80 ../../pgr_trsp.rst:135
msgid ""
"if ``true``, the ``reverse_cost`` column of the SQL generated set of rows"
" will be used for the cost of the traversal of the edge in the opposite "
"direction."
msgstr ""

#: ../../pgr_trsp.rst
msgid "restrict_sql"
msgstr ""

#: ../../pgr_trsp.rst:82 ../../pgr_trsp.rst:137
msgid ""
"(optional) a SQL query, which should return a set of rows with the "
"following columns:"
msgstr ""

#: ../../pgr_trsp.rst
msgid "to_cost"
msgstr ""

#: ../../pgr_trsp.rst:88 ../../pgr_trsp.rst:143
msgid "``float8`` turn restriction cost"
msgstr ""

#: ../../pgr_trsp.rst
msgid "target_id"
msgstr ""

#: ../../pgr_trsp.rst:89 ../../pgr_trsp.rst:144
msgid "``int4`` target id"
msgstr ""

#: ../../pgr_trsp.rst
msgid "via_path"
msgstr ""

#: ../../pgr_trsp.rst:90
msgid "``text`` comma separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../pgr_trsp.rst:92
msgid ""
"Another variant of TRSP allows to specify **EDGE id** of source and "
"target together with a fraction to interpolate the position:"
msgstr ""

#: ../../pgr_trsp.rst
msgid "source_edge"
msgstr ""

#: ../../pgr_trsp.rst:94
msgid "``int4`` **EDGE id** of the start edge"
msgstr ""

#: ../../pgr_trsp.rst
msgid "source_pos"
msgstr ""

#: ../../pgr_trsp.rst:95
msgid "``float8`` fraction of 1 defines the position on the start edge"
msgstr ""

#: ../../pgr_trsp.rst
msgid "target_edge"
msgstr ""

#: ../../pgr_trsp.rst:96
msgid "``int4`` **EDGE id** of the end edge"
msgstr ""

#: ../../pgr_trsp.rst
msgid "target_pos"
msgstr ""

#: ../../pgr_trsp.rst:97
msgid "``float8`` fraction of 1 defines the position on the end edge"
msgstr ""

#: ../../pgr_trsp.rst:99 ../../pgr_trsp.rst:152
msgid "Returns set of :ref:`type_cost_result`:"
msgstr ""

#: ../../pgr_trsp.rst
msgid "seq"
msgstr ""

#: ../../pgr_trsp.rst:101 ../../pgr_trsp.rst:154
msgid "row sequence"
msgstr ""

#: ../../pgr_trsp.rst
msgid "id1"
msgstr ""

#: ../../pgr_trsp.rst:102 ../../pgr_trsp.rst:156
msgid "node ID"
msgstr ""

#: ../../pgr_trsp.rst
msgid "id2"
msgstr ""

#: ../../pgr_trsp.rst:103 ../../pgr_trsp.rst:157
msgid "edge ID (``-1`` for the last row)"
msgstr ""

#: ../../pgr_trsp.rst:104
msgid "cost to traverse from ``id1`` using ``id2``"
msgstr ""

#: ../../pgr_trsp.rst:107 ../../pgr_trsp.rst:162
msgid "History"
msgstr ""

#: ../../pgr_trsp.rst:108
msgid "New in version 2.0.0"
msgstr ""

#: ../../pgr_trsp.rst:111
msgid "Support for Vias"
msgstr ""

#: ../../pgr_trsp.rst:113
msgid ""
"The Support for Vias functions are prototypes. Not all corner cases are "
"being considered."
msgstr ""

#: ../../pgr_trsp.rst:116
msgid ""
"We also have support for vias where you can say generate a from A to B to"
" C, etc. We support both methods above only you pass an array of vertices"
" or and array of edges and percentage position along the edge in two "
"arrays."
msgstr ""

#: ../../pgr_trsp.rst
msgid "vids"
msgstr ""

#: ../../pgr_trsp.rst:133
msgid ""
"``int4[]`` An ordered array of **NODE id** the path will go through from "
"start to end."
msgstr ""

#: ../../pgr_trsp.rst:145
msgid "``text`` commar separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../pgr_trsp.rst:147
msgid ""
"Another variant of TRSP allows to specify **EDGE id** together with a "
"fraction to interpolate the position:"
msgstr ""

#: ../../pgr_trsp.rst
msgid "eids"
msgstr ""

#: ../../pgr_trsp.rst:149
msgid "``int4`` An ordered array of **EDGE id** that the path has to traverse"
msgstr ""

#: ../../pgr_trsp.rst
msgid "pcts"
msgstr ""

#: ../../pgr_trsp.rst:150
msgid ""
"``float8`` An array of fractional positions along the respective edges in"
" ``eids``, where 0.0 is the start of the edge and 1.0 is the end of the "
"eadge."
msgstr ""

#: ../../pgr_trsp.rst:155
msgid "route ID"
msgstr ""

#: ../../pgr_trsp.rst
msgid "id3"
msgstr ""

#: ../../pgr_trsp.rst:158
msgid "cost to traverse from ``id2`` using ``id3``"
msgstr ""

#: ../../pgr_trsp.rst:163
msgid "Via Support prototypes new in version 2.1.0"
msgstr ""

#: ../../pgr_trsp.rst:166
msgid "Examples"
msgstr ""

#: ../../pgr_trsp.rst:168
msgid "**Without turn restrictions**"
msgstr ""

#: ../../pgr_trsp.rst:175
msgid "**With turn restrictions**"
msgstr ""

#: ../../pgr_trsp.rst:177
msgid "Then a query with turn restrictions is created as:"
msgstr ""

#: ../../pgr_trsp.rst:184
msgid "An example query using vertex ids and via points:"
msgstr ""

#: ../../pgr_trsp.rst:191
msgid "An example query using edge ids and vias:"
msgstr ""

#: ../../pgr_trsp.rst:198
msgid "The queries use the :ref:`sampledata` network."
msgstr ""

#: ../../pgr_trsp.rst:202
msgid "See Also"
msgstr ""

#: ../../pgr_trsp.rst:204
msgid ":ref:`type_cost_result`"
msgstr ""

