# 
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-02 16:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/tutorial/index.rst:13
msgid "Getting Started"
msgstr ""

#: ../../src/tutorial/index.rst:15
msgid ""
"This is a simple guide to walk you through the steps of getting started with"
" pgRouting. In this guide we will cover:"
msgstr ""

#: ../../src/tutorial/index.rst:18 ../../src/tutorial/index.rst:27
msgid "How to create a database to use for our project"
msgstr ""

#: ../../src/tutorial/index.rst:19 ../../src/tutorial/index.rst:61
msgid "How to load some data"
msgstr ""

#: ../../src/tutorial/index.rst:20 ../../src/tutorial/index.rst:77
msgid "How to build a topology"
msgstr ""

#: ../../src/tutorial/index.rst:21 ../../src/tutorial/index.rst:93
msgid "How to check your graph for errors"
msgstr ""

#: ../../src/tutorial/index.rst:22 ../../src/tutorial/index.rst:120
msgid "How to compute a route"
msgstr ""

#: ../../src/tutorial/index.rst:23 ../../src/tutorial/index.rst:141
msgid "How to use other tools to view your graph and route"
msgstr ""

#: ../../src/tutorial/index.rst:24 ../../src/tutorial/index.rst:146
msgid "How to create a web app"
msgstr ""

#: ../../src/tutorial/index.rst:29
msgid ""
"The first thing we need to do is create a database and load pgrouting in the"
" database. Typically you will create a database for each project. Once you "
"have a database to work in, your can load your data and build your "
"application in that database. This makes it easy to move your project later "
"if you want to to say a production server."
msgstr ""

#: ../../src/tutorial/index.rst:35
msgid "For Postgresql 9.1 and later versions"
msgstr ""

#: ../../src/tutorial/index.rst:44
msgid "For older versions of postgresql"
msgstr ""

#: ../../src/tutorial/index.rst:63
msgid ""
"How you load your data will depend in what form it comes it. There are "
"various OpenSource tools that can help you, like:"
msgstr ""

#: ../../src/tutorial/index.rst:66
msgid "this is the postgresql shapefile loader"
msgstr ""

#: ../../src/tutorial/index.rst:67
msgid "this is a vector data conversion utility"
msgstr ""

#: ../../src/tutorial/index.rst:68
msgid "this is a tool for loading OSM data into postgresql"
msgstr ""

#: ../../src/tutorial/index.rst:70
msgid ""
"So these tools and probably others will allow you to read vector data and "
"and can load that data into your database as a table of some kind. At this "
"point you need to know a little about your data structure and content. One "
"easy way to browse you data table is with pgAdmin3 or phpPgAdmin."
msgstr ""

#: ../../src/tutorial/index.rst:79
msgid ""
"Next we need to build a topology for our street data. What this means is "
"that for any given edge in your street data the ends of that edge will be "
"connected to a unique node and to other edges that are also connected to "
"that same unique node. Once all the edges are connected to nodes we have a "
"graph that can be used for routing with pgrouting. We provide a tools the "
"will help with this:"
msgstr ""

#: ../../src/tutorial/index.rst:89
msgid "See :ref:`pgr_create_topology` for more information."
msgstr ""

#: ../../src/tutorial/index.rst:95
msgid ""
"There are lots of possible sources for errors in a graph. The data that you "
"started with may not have been designed with routing in mind. A graph as "
"some very specific requirments. One it that it is *NODED*, this means that "
"except for some very specific use cases, each road segments starts and ends "
"at a node and that in general is does not cross another road segment that it"
" should be connected to."
msgstr ""

#: ../../src/tutorial/index.rst:102
msgid ""
"There can be other errors like the direction of a one-way street being "
"entered in the wrong direction. We do not have tools to search for all "
"possible errors but we have some basic tools that might help."
msgstr ""

#: ../../src/tutorial/index.rst:112
msgid "See :ref:`analytics` for more information."
msgstr ""

#: ../../src/tutorial/index.rst:114
msgid ""
"If your data needs to be *NODED*, we have a tool that can help for that "
"also."
msgstr ""

#: ../../src/tutorial/index.rst:116
msgid "See :ref:`pgr_node_network` for more information."
msgstr ""

#: ../../src/tutorial/index.rst:122
msgid ""
"Once you have all the prep work done above, computing a route is fairly "
"easy. We have a lot of different algorithms but they can work with your "
"prepared road network. The general form of a route query is:"
msgstr ""

#: ../../src/tutorial/index.rst:130
msgid ""
"As you can see this is fairly straight forward and you can look and the "
"specific algorithms for the details on how to use them. What you get as a "
"result from these queries will be a set of record of type ``pgr_costResult``"
" or ``pgr_geomResult``. These results have information like edge id and/or "
"the node id along with the cost or geometry for the step in the path from "
"*start* to *end*. Using the ids you can join these result back to your edge "
"table to get more information about each step in the path."
msgstr ""

#: ../../src/tutorial/index.rst:138
msgid "See also :ref:`type_cost_result` and :ref:`type_geom_result`."
msgstr ""

#: ../../src/tutorial/index.rst:143 ../../src/tutorial/index.rst:148
msgid "TBD"
msgstr ""
