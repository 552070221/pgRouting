woodbri@maps:~/work/pgrouting$ createdb -U postgres -h localhost -T template_pgrouting -E UTF8 trsp_test
woodbri@maps:~/work/pgrouting$ psql -U postgres -h localhost trsp_test
psql (8.4.16)
SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)
Type "help" for help.

trsp_test=# \i ./core/trsp/test/trsp-test-data.sql

trsp_test=# select * from turn_restrict_shortest_path(
trsp_test(#     'select eid as id, source::integer, target::integer,cost, reverse_cost from edges1',
trsp_test(#     1,     -- edge_id for start
trsp_test(#     0.5,   -- midpoint of edge
trsp_test(#     6,     -- edge_id of route end
trsp_test(#     0.5,   -- midpoint of edge
trsp_test(#     true,  -- directed graph?
trsp_test(#     true,  -- has_reverse_cost?
trsp_test(#     null); -- no turn restrictions
 vertex_id | edge_id | cost
-----------+---------+------
        -1 |       1 |  0.5
         2 |       4 |    1
         7 |       7 |    1
         6 |       6 |  0.5
(4 rows)

trsp_test=# select * from turn_restrict_shortest_path(
trsp_test(#     'select eid as id, source::integer, target::integer,cost, reverse_cost from edges1',
trsp_test(#     1,     -- node_id of start
trsp_test(#     5,     -- node_id of end
trsp_test(#     true,  -- directed graph?
trsp_test(#     true,  -- has_reverse_cost?
trsp_test(#     null); -- no turn restrictions
 vertex_id | edge_id | cost
-----------+---------+------
         1 |       1 |    1
         2 |       4 |    1
         7 |       7 |    1
         6 |       6 |    1
         5 |      -1 |    0
(5 rows)

trsp_test=# select * from turn_restrict_shortest_path(
trsp_test(#     'select eid as id, source::integer, target::integer,cost, reverse_cost from edges1',
trsp_test(#     1,    -- edge_id for start
trsp_test(#     0.5,  -- midpoint of edge
trsp_test(#     6,    -- edge_id of route end
trsp_test(#     0.5,  -- midpoint of edge
trsp_test(#     true, -- directed graph?
trsp_test(#     true, -- has_reverse_cost?
trsp_test(#               -- include the turn restrictions
trsp_test(#     'select to_cost, teid as target_id, feid||coalesce('',''||via,'''') as via_path from restrictions1');
 vertex_id | edge_id | cost
-----------+---------+------
        -1 |       1 |  0.5
         2 |       4 |    1
         7 |       8 |    1
         8 |       9 |    1
         9 |      16 |    1
         4 |       3 |    1
         3 |       5 |    1
         8 |       8 |    1
         7 |       7 |    1
         6 |       6 |  0.5
(10 rows)

trsp_test=# select * from turn_restrict_shortest_path(
trsp_test(#     'select eid as id, source::integer, target::integer,cost, reverse_cost from edges1',
trsp_test(#     1,     -- node_id of start
trsp_test(#     5,     -- node_id of end
trsp_test(#     true,  -- directed graph?
trsp_test(#     true,  -- has_reverse_cost?
trsp_test(#                -- include the turn restrictions
trsp_test(#     'select to_cost, teid as target_id, feid||coalesce('',''||via,'''') as via_path from restrictions1');
 vertex_id | edge_id | cost
-----------+---------+------
         1 |       1 |    1
         2 |       4 |    1
         7 |       8 |    1
         8 |       9 |    1
         9 |      16 |    1
         4 |       3 |    1
         3 |       5 |    1
         8 |       8 |    1
         7 |       7 |    1
         6 |       6 |    1
         5 |      -1 |    0
(11 rows)

\quit
