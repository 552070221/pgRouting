# 
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-02 12:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../src/kdijkstra/doc/index.rst:13
msgid "pgr_kDijkstra - Mutliple destination Shortest Path Dijkstra"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:21
msgid "Name"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:23
msgid ""
"``pgr_kdijkstraCost`` - Returns the costs for K shortest paths using "
"Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:24
msgid ""
"``pgr_kdijkstraPath`` - Returns the paths for K shortest paths using "
"Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:28
msgid "Synopsis"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:30
msgid ""
"These functions allow you to have a single start node and multiple "
"destination nodes and will compute the routes to all the destinations from "
"the source node. Returns a set of :ref:`pgr_costResult3 <type_cost_result3>`"
" or :ref:`pgr_costResult3 <type_cost_result3>`. ``pgr_kdijkstraCost`` "
"returns one record for each destination node and the cost is the total code "
"of the route to that node. ``pgr_kdijkstraPath`` returns one record for "
"every edge in that path from source to destination and the cost is to "
"traverse that edge."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:42
msgid "Description"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:44
msgid ""
"a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:51
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:52
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:53
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:54
msgid ""
"``float8`` value, of the edge traversal cost. A negative cost will prevent "
"the edge from being inserted in the graph."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:55
msgid ""
"(optional) the cost for the reverse traversal of the edge. This is only used"
" when the ``directed`` and ``has_rcost`` parameters are ``true`` (see the "
"above remark about negative costs)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:57
msgid "``int4`` id of the start point"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:58
msgid "``int4[]`` an array of ids of the end points"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:59
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:60
msgid ""
"if ``true``, the ``reverse_cost`` column of the SQL generated set of rows "
"will be used for the cost of the traversal of the edge in the opposite "
"direction."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:63
msgid "``pgr_kdijkstraCost`` returns set of :ref:`type_cost_result`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:65
#: ../../../src/kdijkstra/doc/index.rst:73
msgid "row sequence"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:66
msgid ""
"path vertex source id (this will always be source start point in the query)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:67
msgid "path vertex target id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:68
msgid ""
"cost to traverse the path from ``id1`` to ``id2``. Cost will be -1.0 if "
"there is no path to that target vertex id."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:71
msgid "``pgr_kdijkstraPath`` returns set of :ref:`type_cost_result3`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:74
msgid "path target id (identifies the target path)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:75
msgid "path edge target node id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:76
msgid "path edge id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:77
msgid "cost to traverse this edge or -1.0 if there is no path to this target"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:81
msgid "History"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:82
msgid "New in version 2.0.0"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:86
msgid "Examples"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:88
msgid "Returning a ``cost`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:121
msgid "Returning a ``path`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:142
msgid ""
"There is no assurance that the result above will be ordered in the direction"
" of flow of the route, ie: it might be reversed. You will need to check if "
"``st_startPoint()`` of the route is the same as the start node location and "
"if it is not then call ``st_reverse()`` to reverse the direction of the "
"route. This behavior is a function of PostGIS functions ``st_linemerge()`` "
"and ``st_union()`` and not pgRouting."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:151
msgid "See Also"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:153
msgid ":ref:`type_cost_result`"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:154
msgid "http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
msgid "pgr_kDijkstraCost(text,integer,integer[],boolean,boolean)"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
msgid "pgr_kDijkstraPath(text,integer,integer[],boolean,boolean)"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:15
msgid "dijkstra"
msgstr ""
