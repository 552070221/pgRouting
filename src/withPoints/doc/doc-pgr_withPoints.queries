BEGIN;
BEGIN
--e1
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, 3);
 seq | path_seq | node | edge | cost | agg_cost 
-----+----------+------+------+------+----------
   1 |        1 |   -1 |    4 |  0.6 |        0
   2 |        2 |    5 |    8 |    1 |      0.6
   3 |        3 |    6 |    9 |    1 |      1.6
   4 |        4 |    9 |   16 |    1 |      2.6
   5 |        5 |    4 |    3 |    1 |      3.6
   6 |        6 |    3 |    5 |  0.6 |      4.6
   7 |        7 |   -3 |   -1 |    0 |      5.2
(7 rows)

--e2
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, 3,
        details := true);
 seq | path_seq | node | edge | cost | agg_cost 
-----+----------+------+------+------+----------
   1 |        1 |   -1 |    4 |  0.2 |        0
   2 |        2 |   -4 |    4 |  0.4 |      0.2
   3 |        3 |    5 |    8 |    1 |      0.6
   4 |        4 |    6 |    9 |    1 |      1.6
   5 |        5 |    9 |   16 |    1 |      2.6
   6 |        6 |    4 |    3 |    1 |      3.6
   7 |        7 |    3 |    5 |  0.4 |      4.6
   8 |        8 |   -2 |    5 |  0.2 |        5
   9 |        9 |   -3 |   -1 |    0 |      5.2
(9 rows)

--e3
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, ARRAY[3,5]);
 seq | path_seq | end_pid | node | edge | cost | agg_cost 
-----+----------+---------+------+------+------+----------
   1 |        1 |      -3 |   -1 |    4 |  0.6 |        0
   2 |        2 |      -3 |    5 |    8 |    1 |      0.6
   3 |        3 |      -3 |    6 |    9 |    1 |      1.6
   4 |        4 |      -3 |    9 |   16 |    1 |      2.6
   5 |        5 |      -3 |    4 |    3 |    1 |      3.6
   6 |        6 |      -3 |    3 |    5 |  0.6 |      4.6
   7 |        7 |      -3 |   -3 |   -1 |    0 |      5.2
   8 |        1 |      -5 |   -1 |    4 |  0.6 |        0
   9 |        2 |      -5 |    5 |    8 |    1 |      0.6
  10 |        3 |      -5 |    6 |    9 |    1 |      1.6
  11 |        4 |      -5 |    9 |   16 |    1 |      2.6
  12 |        5 |      -5 |    4 |    3 |    1 |      3.6
  13 |        6 |      -5 |    3 |    2 |  0.5 |      4.6
  14 |        7 |      -5 |   -5 |   -1 |    0 |      5.1
(14 rows)

--e4
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], 3);
 seq | path_seq | start_pid | node | edge | cost | agg_cost 
-----+----------+-----------+------+------+------+----------
   1 |        1 |        -1 |   -1 |    4 |  0.6 |        0
   2 |        2 |        -1 |    5 |    8 |    1 |      0.6
   3 |        3 |        -1 |    6 |    9 |    1 |      1.6
   4 |        4 |        -1 |    9 |   16 |    1 |      2.6
   5 |        5 |        -1 |    4 |    3 |    1 |      3.6
   6 |        6 |        -1 |    3 |    5 |  0.6 |      4.6
   7 |        7 |        -1 |   -3 |   -1 |    0 |      5.2
   8 |        1 |        -2 |   -2 |    5 |  0.2 |        0
   9 |        2 |        -2 |   -3 |   -1 |    0 |      0.2
(9 rows)

--e5
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], ARRAY[3,5]);
 seq | path_seq | start_pid | end_pid | node | edge | cost | agg_cost 
-----+----------+-----------+---------+------+------+------+----------
   1 |        1 |        -1 |      -3 |   -1 |    4 |  0.6 |        0
   2 |        2 |        -1 |      -3 |    5 |    8 |    1 |      0.6
   3 |        3 |        -1 |      -3 |    6 |    9 |    1 |      1.6
   4 |        4 |        -1 |      -3 |    9 |   16 |    1 |      2.6
   5 |        5 |        -1 |      -3 |    4 |    3 |    1 |      3.6
   6 |        6 |        -1 |      -3 |    3 |    5 |  0.6 |      4.6
   7 |        7 |        -1 |      -3 |   -3 |   -1 |    0 |      5.2
   8 |        1 |        -1 |      -5 |   -1 |    4 |  0.6 |        0
   9 |        2 |        -1 |      -5 |    5 |    8 |    1 |      0.6
  10 |        3 |        -1 |      -5 |    6 |    9 |    1 |      1.6
  11 |        4 |        -1 |      -5 |    9 |   16 |    1 |      2.6
  12 |        5 |        -1 |      -5 |    4 |    3 |    1 |      3.6
  13 |        6 |        -1 |      -5 |    3 |    2 |  0.5 |      4.6
  14 |        7 |        -1 |      -5 |   -5 |   -1 |    0 |      5.1
  15 |        1 |        -2 |      -3 |   -2 |    5 |  0.2 |        0
  16 |        2 |        -2 |      -3 |   -3 |   -1 |    0 |      0.2
  17 |        1 |        -2 |      -5 |   -2 |    5 |  0.6 |        0
  18 |        2 |        -2 |      -5 |    6 |    9 |    1 |      0.6
  19 |        3 |        -2 |      -5 |    9 |   16 |    1 |      1.6
  20 |        4 |        -2 |      -5 |    4 |    3 |    1 |      2.6
  21 |        5 |        -2 |      -5 |    3 |    2 |  0.5 |      3.6
  22 |        6 |        -2 |      -5 |   -5 |   -1 |    0 |      4.1
(22 rows)

--q2
SELECT ('(' || start_pid || ' => ' || end_pid ||') at ' || path_seq || 'th step:')::TEXT AS path_at,
            CASE WHEN edge = -1 THEN ' visits'
                ELSE ' passes in front of'
            END as status,
            CASE WHEN node < 0 THEN 'Point'
                ELSE 'Vertex'
            END as is_a,
            abs(node) as id
        FROM pgr_withPoints(
            'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
            'SELECT pid, edge_id, fraction, side from pointsOfInterest',
            ARRAY[1,2,3,5], ARRAY[1,2,3,5],
            driving_side := 'r',
            details := true)
        WHERE node IN (-4,4);
         path_at         |       status        |  is_a  | id 
-------------------------+---------------------+--------+----
 (-1 => -2) at 3th step: |  passes in front of | Point  |  4
 (-1 => -2) at 7th step: |  passes in front of | Vertex |  4
 (-1 => -3) at 3th step: |  passes in front of | Point  |  4
 (-1 => -3) at 7th step: |  passes in front of | Vertex |  4
 (-1 => -5) at 3th step: |  passes in front of | Point  |  4
 (-1 => -5) at 7th step: |  passes in front of | Vertex |  4
 (-2 => -5) at 5th step: |  passes in front of | Vertex |  4
 (-3 => -2) at 4th step: |  passes in front of | Vertex |  4
 (-3 => -5) at 4th step: |  passes in front of | Vertex |  4
 (-5 => -1) at 3th step: |  passes in front of | Point  |  4
 (-5 => -2) at 3th step: |  passes in front of | Point  |  4
 (-5 => -2) at 7th step: |  passes in front of | Vertex |  4
 (-5 => -3) at 3th step: |  passes in front of | Point  |  4
 (-5 => -3) at 7th step: |  passes in front of | Vertex |  4
(14 rows)

--q3
SELECT ('(' || start_pid || ' => ' || end_pid ||') at ' || path_seq || 'th step:')::TEXT AS path_at,
            CASE WHEN edge = -1 THEN ' visits'
                ELSE ' passes in front of'
            END as status,
            CASE WHEN node < 0 THEN 'Point'
                ELSE 'Vertex'
            END as is_a,
            abs(node) as id
        FROM pgr_withPoints(
            'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
            'SELECT pid, edge_id, fraction, side from pointsOfInterest',
            ARRAY[1,2,3,5], ARRAY[1,2,3,5],
            driving_side := 'l',
            details := true)
        WHERE node IN (-4,4);
         path_at         |       status        |  is_a  | id 
-------------------------+---------------------+--------+----
 (-1 => -2) at 5th step: |  passes in front of | Vertex |  4
 (-1 => -3) at 5th step: |  passes in front of | Vertex |  4
 (-1 => -5) at 5th step: |  passes in front of | Vertex |  4
 (-2 => -1) at 5th step: |  passes in front of | Point  |  4
 (-2 => -5) at 5th step: |  passes in front of | Vertex |  4
 (-3 => -1) at 4th step: |  passes in front of | Point  |  4
 (-3 => -2) at 4th step: |  passes in front of | Vertex |  4
 (-3 => -5) at 4th step: |  passes in front of | Vertex |  4
 (-5 => -2) at 7th step: |  passes in front of | Vertex |  4
 (-5 => -3) at 7th step: |  passes in front of | Vertex |  4
(10 rows)

--q4
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], ARRAY[3,5],
        directed := false,
        details := true);
 seq | path_seq | start_pid | end_pid | node | edge | cost | agg_cost 
-----+----------+-----------+---------+------+------+------+----------
   1 |        1 |        -1 |      -3 |   -1 |    4 |  0.2 |        0
   2 |        2 |        -1 |      -3 |   -4 |    4 |  0.4 |      0.2
   3 |        3 |        -1 |      -3 |    5 |    8 |    1 |      0.6
   4 |        4 |        -1 |      -3 |    6 |    5 |  0.4 |      1.6
   5 |        5 |        -1 |      -3 |   -3 |   -1 |    0 |        2
   6 |        1 |        -1 |      -5 |   -1 |    4 |  0.4 |        0
   7 |        2 |        -1 |      -5 |   -6 |    2 |  0.5 |      0.4
   8 |        3 |        -1 |      -5 |   -5 |   -1 |    0 |      0.9
   9 |        1 |        -2 |      -3 |   -2 |    5 |  0.2 |        0
  10 |        2 |        -2 |      -3 |   -3 |   -1 |    0 |      0.2
  11 |        1 |        -2 |      -5 |   -2 |    5 |  0.4 |        0
  12 |        2 |        -2 |      -5 |    3 |    2 |  0.5 |      0.4
  13 |        3 |        -2 |      -5 |   -5 |   -1 |    0 |      0.9
(13 rows)

--q5
ROLLBACK;
ROLLBACK
