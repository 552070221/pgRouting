BEGIN;
BEGIN
--e1
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, 3);
 seq | path_seq | node | edge | cost | agg_cost 
-----+----------+------+------+------+----------
   1 |        1 |   -1 |    1 |  0.6 |        0
   2 |        2 |    2 |    4 |    1 |      0.6
   3 |        3 |    5 |   10 |    1 |      1.6
   4 |        4 |   10 |   12 |  0.6 |      2.6
   5 |        5 |   -3 |   -1 |    0 |      3.2
(5 rows)

--e2
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, 3,
        details := true);
 seq | path_seq | node | edge | cost | agg_cost 
-----+----------+------+------+------+----------
   1 |        1 |   -1 |    1 |  0.6 |        0
   2 |        2 |    2 |    4 |  0.7 |      0.6
   3 |        3 |   -6 |    4 |  0.3 |      1.3
   4 |        4 |    5 |   10 |    1 |      1.6
   5 |        5 |   10 |   12 |  0.6 |      2.6
   6 |        6 |   -3 |   -1 |    0 |      3.2
(6 rows)

--e3
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        1, ARRAY[3,5]);
 seq | path_seq | end_pid | node | edge | cost | agg_cost 
-----+----------+---------+------+------+------+----------
   1 |        1 |      -3 |   -1 |    1 |  0.6 |        0
   2 |        2 |      -3 |    2 |    4 |    1 |      0.6
   3 |        3 |      -3 |    5 |   10 |    1 |      1.6
   4 |        4 |      -3 |   10 |   12 |  0.6 |      2.6
   5 |        5 |      -3 |   -3 |   -1 |    0 |      3.2
   6 |        1 |      -5 |   -1 |    1 |  0.6 |        0
   7 |        2 |      -5 |    2 |    4 |    1 |      0.6
   8 |        3 |      -5 |    5 |    8 |    1 |      1.6
   9 |        4 |      -5 |    6 |    9 |    1 |      2.6
  10 |        5 |      -5 |    9 |   16 |    1 |      3.6
  11 |        6 |      -5 |    4 |    3 |    1 |      4.6
  12 |        7 |      -5 |    3 |    5 |  0.8 |      5.6
  13 |        8 |      -5 |   -5 |   -1 |    0 |      6.4
(13 rows)

--e4
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], 3);
 seq | path_seq | start_pid | node | edge | cost | agg_cost 
-----+----------+-----------+------+------+------+----------
   1 |        1 |        -1 |   -1 |    1 |  0.6 |        0
   2 |        2 |        -1 |    2 |    4 |    1 |      0.6
   3 |        3 |        -1 |    5 |   10 |    1 |      1.6
   4 |        4 |        -1 |   10 |   12 |  0.6 |      2.6
   5 |        5 |        -1 |   -3 |   -1 |    0 |      3.2
   6 |        1 |        -2 |   -2 |   15 |  0.4 |        0
   7 |        2 |        -2 |    9 |    9 |    1 |      0.4
   8 |        3 |        -2 |    6 |    8 |    1 |      1.4
   9 |        4 |        -2 |    5 |   10 |    1 |      2.4
  10 |        5 |        -2 |   10 |   12 |  0.6 |      3.4
  11 |        6 |        -2 |   -3 |   -1 |    0 |        4
(11 rows)

--e5
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], ARRAY[3,5]);
 seq | path_seq | start_pid | end_pid | node | edge | cost | agg_cost 
-----+----------+-----------+---------+------+------+------+----------
   1 |        1 |        -1 |      -3 |   -1 |    1 |  0.6 |        0
   2 |        2 |        -1 |      -3 |    2 |    4 |    1 |      0.6
   3 |        3 |        -1 |      -3 |    5 |   10 |    1 |      1.6
   4 |        4 |        -1 |      -3 |   10 |   12 |  0.6 |      2.6
   5 |        5 |        -1 |      -3 |   -3 |   -1 |    0 |      3.2
   6 |        1 |        -1 |      -5 |   -1 |    1 |  0.6 |        0
   7 |        2 |        -1 |      -5 |    2 |    4 |    1 |      0.6
   8 |        3 |        -1 |      -5 |    5 |    8 |    1 |      1.6
   9 |        4 |        -1 |      -5 |    6 |    9 |    1 |      2.6
  10 |        5 |        -1 |      -5 |    9 |   16 |    1 |      3.6
  11 |        6 |        -1 |      -5 |    4 |    3 |    1 |      4.6
  12 |        7 |        -1 |      -5 |    3 |    5 |  0.8 |      5.6
  13 |        8 |        -1 |      -5 |   -5 |   -1 |    0 |      6.4
  14 |        1 |        -2 |      -3 |   -2 |   15 |  0.4 |        0
  15 |        2 |        -2 |      -3 |    9 |    9 |    1 |      0.4
  16 |        3 |        -2 |      -3 |    6 |    8 |    1 |      1.4
  17 |        4 |        -2 |      -3 |    5 |   10 |    1 |      2.4
  18 |        5 |        -2 |      -3 |   10 |   12 |  0.6 |      3.4
  19 |        6 |        -2 |      -3 |   -3 |   -1 |    0 |        4
  20 |        1 |        -2 |      -5 |   -2 |   15 |  0.4 |        0
  21 |        2 |        -2 |      -5 |    9 |   16 |    1 |      0.4
  22 |        3 |        -2 |      -5 |    4 |    3 |    1 |      1.4
  23 |        4 |        -2 |      -5 |    3 |    5 |  0.8 |      2.4
  24 |        5 |        -2 |      -5 |   -5 |   -1 |    0 |      3.2
(24 rows)

--q2
SELECT ('(' || start_pid || ' => ' || end_pid ||') at ' || path_seq || 'th step:')::TEXT AS path_at,
            CASE WHEN edge = -1 THEN ' visits'
                ELSE ' passes in front of'
            END as status,
            CASE WHEN node < 0 THEN 'Point'
                ELSE 'Vertex'
            END as is_a,
            abs(node) as id
        FROM pgr_withPoints(
            'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
            'SELECT pid, edge_id, fraction, side from pointsOfInterest',
            ARRAY[1,2,3,5], ARRAY[1,2,3,5],
            driving_side := 'r',
            details := true)
        WHERE node IN (-6,6);
         path_at         |       status        |  is_a  | id 
-------------------------+---------------------+--------+----
 (-1 => -2) at 4th step: |  passes in front of | Point  |  6
 (-1 => -2) at 6th step: |  passes in front of | Vertex |  6
 (-1 => -3) at 4th step: |  passes in front of | Point  |  6
 (-1 => -5) at 4th step: |  passes in front of | Point  |  6
 (-1 => -5) at 6th step: |  passes in front of | Vertex |  6
 (-2 => -3) at 4th step: |  passes in front of | Vertex |  6
 (-3 => -1) at 5th step: |  passes in front of | Vertex |  6
 (-5 => -1) at 2th step: |  passes in front of | Vertex |  6
 (-5 => -2) at 2th step: |  passes in front of | Vertex |  6
 (-5 => -3) at 2th step: |  passes in front of | Vertex |  6
(10 rows)

--q3
SELECT ('(' || start_pid || ' => ' || end_pid ||') at ' || path_seq || 'th step:')::TEXT AS path_at,
            CASE WHEN edge = -1 THEN ' visits'
                ELSE ' passes in front of'
            END as status,
            CASE WHEN node < 0 THEN 'Point'
                ELSE 'Vertex'
            END as is_a,
            abs(node) as id
        FROM pgr_withPoints(
            'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
            'SELECT pid, edge_id, fraction, side from pointsOfInterest',
            ARRAY[1,2,3,5], ARRAY[1,2,3,5],
            driving_side := 'l',
            details := true)
        WHERE node IN (-6,6);
         path_at         |       status        |  is_a  | id 
-------------------------+---------------------+--------+----
 (-1 => -2) at 4th step: |  passes in front of | Vertex |  6
 (-1 => -5) at 4th step: |  passes in front of | Vertex |  6
 (-2 => -3) at 3th step: |  passes in front of | Vertex |  6
 (-5 => -1) at 2th step: |  passes in front of | Vertex |  6
 (-5 => -1) at 4th step: |  passes in front of | Point  |  6
 (-5 => -2) at 2th step: |  passes in front of | Vertex |  6
 (-5 => -3) at 2th step: |  passes in front of | Vertex |  6
(7 rows)

--q4
SELECT * FROM pgr_withPoints(
        'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
        'SELECT pid, edge_id, fraction, side from pointsOfInterest',
        ARRAY[1,2], ARRAY[3,5],
        directed := false,
        details := true);
 seq | path_seq | start_pid | end_pid | node | edge | cost | agg_cost 
-----+----------+-----------+---------+------+------+------+----------
   1 |        1 |        -1 |      -3 |   -1 |    1 |  0.6 |        0
   2 |        2 |        -1 |      -3 |    2 |    4 |  0.7 |      0.6
   3 |        3 |        -1 |      -3 |   -6 |    4 |  0.3 |      1.3
   4 |        4 |        -1 |      -3 |    5 |   10 |    1 |      1.6
   5 |        5 |        -1 |      -3 |   10 |   12 |  0.6 |      2.6
   6 |        6 |        -1 |      -3 |   -3 |   -1 |    0 |      3.2
   7 |        1 |        -1 |      -5 |   -1 |    1 |  0.6 |        0
   8 |        2 |        -1 |      -5 |    2 |    2 |    1 |      0.6
   9 |        3 |        -1 |      -5 |    3 |    5 |  0.8 |      1.6
  10 |        4 |        -1 |      -5 |   -5 |   -1 |    0 |      2.4
  11 |        1 |        -2 |      -3 |   -2 |   15 |  0.6 |        0
  12 |        2 |        -2 |      -3 |   12 |   13 |    1 |      0.6
  13 |        3 |        -2 |      -3 |   11 |   12 |  0.4 |      1.6
  14 |        4 |        -2 |      -3 |   -3 |   -1 |    0 |        2
  15 |        1 |        -2 |      -5 |   -2 |   15 |  0.4 |        0
  16 |        2 |        -2 |      -5 |    9 |    9 |    1 |      0.4
  17 |        3 |        -2 |      -5 |    6 |    5 |  0.2 |      1.4
  18 |        4 |        -2 |      -5 |   -5 |   -1 |    0 |      1.6
(18 rows)

--q5
ROLLBACK;
ROLLBACK
