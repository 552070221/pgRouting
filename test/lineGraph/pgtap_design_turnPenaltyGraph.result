BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
-- 0 edge graph
UPDATE edge_table SET id = id * 100, source = 1000 * source, target = 1000 * target;
UPDATE 18
UPDATE edge_table_vertices_pgr SET id = id * 1000;
UPDATE 17
SELECT id, source, target, cost, reverse_cost FROM edge_table;
  id  | source | target | cost | reverse_cost 
------+--------+--------+------+--------------
  100 |   1000 |   2000 |    1 |            1
  200 |   2000 |   3000 |   -1 |            1
  300 |   3000 |   4000 |   -1 |            1
  400 |   2000 |   5000 |    1 |            1
  500 |   3000 |   6000 |    1 |           -1
  600 |   7000 |   8000 |    1 |            1
  700 |   8000 |   5000 |    1 |            1
  800 |   5000 |   6000 |    1 |            1
  900 |   6000 |   9000 |    1 |            1
 1000 |   5000 |  10000 |    1 |            1
 1100 |   6000 |  11000 |    1 |           -1
 1200 |  10000 |  11000 |    1 |           -1
 1300 |  11000 |  12000 |    1 |           -1
 1400 |  10000 |  13000 |    1 |            1
 1500 |   9000 |  12000 |    1 |            1
 1600 |   4000 |   9000 |    1 |            1
 1700 |  14000 |  15000 |    1 |            1
 1800 |  16000 |  17000 |    1 |            1
(18 rows)

SELECT id FROM edge_table_vertices_pgr;
  id   
-------
  1000
  2000
  3000
  4000
  5000
  6000
  7000
  8000
  9000
 10000
 11000
 12000
 13000
 14000
 15000
 16000
 17000
(17 rows)

SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id, source, target, cost FROM edge_table WHERE id = 1$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
(0 rows)

-- one edge graph
SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table
    WHERE id = 200$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      2 |      1 |    1 |                   3000 |                 -200 |                   2000 |                 -200
(1 row)

a many one edge component graph
SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table
    WHERE id = 1100$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      2 |    1 |                   6000 |                 1100 |                  11000 |                 1100
(1 row)

-- two edge graph
SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table
    WHERE id = 100$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                   1000 |                  100 |                   2000 |                  100
   2 |      2 |      1 |    0 |                   1000 |                 -100 |                   1000 |                  100
   3 |      3 |      2 |    1 |                   2000 |                 -100 |                   1000 |                 -100
   4 |      4 |      3 |    0 |                   2000 |                  100 |                   2000 |                 -100
(4 rows)

SELECT  *  FROM pgr_turnPenaltyGraph($$
    SELECT id AS id, target, source, reverse_cost AS cost FROM edge_table WHERE id = 100
    UNION
    SELECT id, source, target, cost FROM edge_table WHERE id = 100
    $$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      2 |      2 |    1 |                   2000 |                  100 |                   2000 |                  100
   2 |      2 |      4 |    1 |                   2000 |                  100 |                   1000 |                  100
   3 |      4 |      2 |    1 |                   1000 |                  100 |                   2000 |                  100
   4 |      4 |      4 |    1 |                   1000 |                  100 |                   1000 |                  100
(4 rows)

SELECT  *  FROM pgr_turnPenaltyGraph($$
    SELECT id, target, source, reverse_cost AS cost FROM edge_table WHERE id = 100
    UNION
    SELECT -id AS id, source, target, cost FROM edge_table WHERE id = 100
    $$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                   2000 |                 -100 |                   1000 |                 -100
   2 |      2 |      1 |    0 |                   2000 |                  100 |                   2000 |                 -100
   3 |      3 |      2 |    1 |                   1000 |                  100 |                   2000 |                  100
   4 |      4 |      3 |    0 |                   1000 |                 -100 |                   1000 |                  100
(4 rows)

-- two edge graph
SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table
    WHERE id IN (200, 300)$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      2 |      1 |    1 |                   3000 |                 -200 |                   2000 |                 -200
   2 |      3 |      2 |    0 |                   3000 |                 -300 |                   3000 |                 -200
   3 |      4 |      3 |    1 |                   4000 |                 -300 |                   3000 |                 -300
(3 rows)

-- 4 edge Graph
SELECT  *  FROM pgr_turnPenaltyGraph( 
    $$SELECT id * 100 AS id, source * 1000 AS source, target * 1000 AS target,
        cost, reverse_cost
    FROM edge_table
    WHERE id in (600, 700)$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      5 |    1 |                7000000 |                60000 |                8000000 |                60000
   2 |      2 |      1 |    0 |                7000000 |               -60000 |                7000000 |                60000
   3 |      3 |      2 |    1 |                8000000 |               -60000 |                7000000 |               -60000
   4 |      4 |      8 |    1 |                8000000 |                70000 |                5000000 |                70000
   5 |      5 |      3 |    0 |                8000000 |                60000 |                8000000 |               -60000
   6 |      5 |      4 |    0 |                8000000 |                60000 |                8000000 |                70000
   7 |      6 |      3 |    0 |                8000000 |               -70000 |                8000000 |               -60000
   8 |      6 |      4 |    0 |                8000000 |               -70000 |                8000000 |                70000
   9 |      7 |      6 |    1 |                5000000 |               -70000 |                8000000 |               -70000
  10 |      8 |      7 |    0 |                5000000 |                70000 |                5000000 |               -70000
(10 rows)

-- other 4 edge Graph
SELECT  *  FROM pgr_turnPenaltyGraph(
    $$SELECT id * 100 AS id, source * 1000 AS source, target * 1000 AS target,
        cost, reverse_cost
    FROM edge_table
    where id in (500, 900, 1100)$$
);
 seq | source | target | cost | original_source_vertex | original_source_edge | original_target_vertex | original_target_edge 
-----+--------+--------+------+------------------------+----------------------+------------------------+----------------------
   1 |      1 |      4 |    1 |                3000000 |                50000 |                6000000 |                50000
   2 |      2 |      7 |    1 |                6000000 |                90000 |                9000000 |                90000
   3 |      3 |      8 |    1 |                6000000 |               110000 |               11000000 |               110000
   4 |      4 |      2 |    0 |                6000000 |                50000 |                6000000 |                90000
   5 |      4 |      3 |    0 |                6000000 |                50000 |                6000000 |               110000
   6 |      5 |      2 |    0 |                6000000 |               -90000 |                6000000 |                90000
   7 |      5 |      3 |    0 |                6000000 |               -90000 |                6000000 |               110000
   8 |      6 |      5 |    1 |                9000000 |               -90000 |                6000000 |               -90000
   9 |      7 |      6 |    0 |                9000000 |                90000 |                9000000 |               -90000
(9 rows)

ROLLBACK;
ROLLBACK
