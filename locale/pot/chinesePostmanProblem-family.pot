# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.0.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 11:55-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/chinesePostmanProblem-family.rst:11
msgid "Chinese Postman Problem - Family of functions (Experimental)"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:15
msgid ":doc:`pgr_directedChPP`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:16
msgid ":doc:`pgr_directedChPP_Cost`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:28
msgid "Given the following query:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:32
msgid "pgr_directedChPP(:math:`sql`)"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:34
msgid "where  :math:`sql = \\{(id_i, source_i, target_i, cost_i, reverse\\_cost_i)\\}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:36
msgid "and"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:38
msgid ":math:`source = \\bigcup source_i`,"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:39
msgid ":math:`target = \\bigcup target_i`,"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:41
msgid "The graphs are defined as follows:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:44
msgid "Directed graph"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:45
msgid "The weighted directed graph, :math:`G(V,E)`, is definied by:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:47
msgid "the set of vertices  :math:`V`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:49
msgid ":math:`V = source \\cup target \\cup {start_{vid}} \\cup  {end_{vid}}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:51
msgid "the set of edges :math:`E`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:53
msgid ":math:`E = \\begin{cases} \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} & \\quad \\text{if } reverse\\_cost = \\varnothing \\\\ \\text{ }  \\text{ }  & \\quad \\text{ } \\\\ \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} &  \\quad \\text{ } \\\\ \\cup      \\{(target_i, source_i, reverse\\_cost_i) \\text{ when } reverse\\_cost_i>=0 \\} & \\quad \\text{if } reverse\\_cost \\neq \\varnothing \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:61
msgid "The problem"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:62
msgid "Given:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:64
msgid ":math:`G(V,E)`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:66
msgid "Then:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:68
msgid ":math:`pgr\\_directedChPP(edges\\_sql) = \\boldsymbol{\\Phi}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:70
msgid ":math:`\\boldsymbol{\\Phi} = {(seq_i, node_i, edge\\_i, cost_i, agg\\_cost_i)}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:72
msgid "Where:"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:74
msgid ":math:`seq_i = i`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:75
msgid ":math:`node_i \\in V`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:76
msgid ":math:`edge_i  = \\begin{cases}  id_{(node_i, node_{i+1},cost_i)}  &\\quad  \\text{when } i \\neq | \\pi | \\\\ -1 &\\quad  \\text{when } i = | \\pi | \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:77
msgid ":math:`cost_i = cost_{(node_i, node_{i+1})}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:78
msgid ":math:`agg\\_cost_i  = \\begin{cases}  0   &\\quad  \\text{when } i = 1  \\\\ \\displaystyle\\sum_{k=1}^{i}  cost_{(node_{k-1}, node_k)}  &\\quad  \\text{when } i \\neq 1 \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:85
msgid "In other words: The algorithm is to find the shortest path which contains every edge in a graph and starts and ends on the same node, if it exists, in terms of a sequence of nodes and of edges,"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:82
msgid ":math:`seq` indicates the relative position in the path of the :math:`node` or :math:`edge`."
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:83
msgid ":math:`cost` is the cost of the edge to be used to go to the next node."
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:84
msgid ":math:`agg\\_cost` is the cost from the start node up to the node."
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:87
msgid "If there is no path, the resulting will be no path found error."
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:91
msgid "See Also"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:94
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:95
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/chinesePostmanProblem-family.rst:96
msgid ":ref:`search`"
msgstr ""

