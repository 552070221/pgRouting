 NOTICE:  PROCESSING:
 NOTICE:  pgr_createTopology('edge_table',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait .....
 NOTICE:  Creating Topology, Please wait...
 NOTICE:  -------------> TOPOLOGY CREATED FOR  18 edges
 NOTICE:  Rows with NULL geometry or NULL id: 0
 NOTICE:  Vertices table for table public.edge_table is: public.edge_table_vertices_pgr
 NOTICE:  ----------------------------------------------
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_analizeGraph('edge_table',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait...
 NOTICE:  Analyzing for dead ends. Please wait...
 NOTICE:  Analyzing for gaps. Please wait...
 NOTICE:  Analyzing for isolated edges. Please wait...
 NOTICE:  Analyzing for ring geometries. Please wait...
 NOTICE:  Analyzing for intersections. Please wait...
 NOTICE:              ANALYSIS RESULTS FOR SELECTED EDGES:
 NOTICE:                    Isolated segments: 2
 NOTICE:                            Dead ends: 7
 NOTICE:  Potential gaps found near dead ends: 1
 NOTICE:               Intersections detected: 1
 NOTICE:                      Ring geometries: 0
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_nodeNetwork('edge_table',0.001,'the_geom','id','noded')
 NOTICE:  Performing checks, pelase wait .....
 NOTICE:  CREATE TABLE will create implicit sequence "edge_table_noded_id_seq" for serial column "edge_table_noded.id"
 CONTEXT:  SQL statement "CREATE TABLE public.edge_table_noded (id bigserial PRIMARY KEY,old_id integer,sub_id integer,
                                                               source bigint,target bigint)"
 PL/pgSQL function pgr_nodenetwork(text,double precision,text,text,text) line 121 at EXECUTE statement
 NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "edge_table_noded_pkey" for table "edge_table_noded"
 CONTEXT:  SQL statement "CREATE TABLE public.edge_table_noded (id bigserial PRIMARY KEY,old_id integer,sub_id integer,
                                                               source bigint,target bigint)"
 PL/pgSQL function pgr_nodenetwork(text,double precision,text,text,text) line 121 at EXECUTE statement
 NOTICE:  Processing, pelase wait .....
 NOTICE:  insert into intergeom (l1id, l2id, geom)
        select l1id, l2id, PGR_startpoint(geom)
        from intergeom where geometryType(geom) = 'LINESTRING' 
 NOTICE:  insert into intergeom (l1id, l2id, geom)
        select l1id, l2id, PGR_endpoint(geom)
        from intergeom where geometryType(geom) = 'LINESTRING' 
 NOTICE:    Splitted Edges: 2
 NOTICE:   Untouched Edges: 16
 NOTICE:       Total original Edges: 18
 NOTICE:   Edges generated: 4
 NOTICE:   Untouched Edges: 16
 NOTICE:         Total New segments: 20
 NOTICE:   New Table: public.edge_table_noded
 NOTICE:  ----------------------------------
OK
1|1
2|1
3|1
4|1
5|1
6|1
7|1
8|1
9|1
10|1
11|1
12|1
13|1
13|2
14|1
15|1
16|1
17|1
18|1
18|2
 NOTICE:  PROCESSING:
 NOTICE:  pgr_createTopology('edge_table_noded',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait .....
 NOTICE:  CREATE TABLE will create implicit sequence "edge_table_noded_vertices_pgr_id_seq" for serial column "edge_table_noded_vertices_pgr.id"
 CONTEXT:  SQL statement "CREATE TABLE public.edge_table_noded_vertices_pgr (id bigserial PRIMARY KEY,cnt integer,chk integer,ein integer,eout integer)"
 PL/pgSQL function pgr_createtopology(text,double precision,text,text,text,text,text) line 203 at EXECUTE statement
 NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "edge_table_noded_vertices_pgr_pkey" for table "edge_table_noded_vertices_pgr"
 CONTEXT:  SQL statement "CREATE TABLE public.edge_table_noded_vertices_pgr (id bigserial PRIMARY KEY,cnt integer,chk integer,ein integer,eout integer)"
 PL/pgSQL function pgr_createtopology(text,double precision,text,text,text,text,text) line 203 at EXECUTE statement
 NOTICE:  Creating Topology, Please wait...
 NOTICE:  -------------> TOPOLOGY CREATED FOR  20 edges
 NOTICE:  Rows with NULL geometry or NULL id: 0
 NOTICE:  Vertices table for table public.edge_table_noded is: public.edge_table_noded_vertices_pgr
 NOTICE:  ----------------------------------------------
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_analizeGraph('edge_table_noded',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait...
 NOTICE:  Analyzing for dead ends. Please wait...
 NOTICE:  Analyzing for gaps. Please wait...
 NOTICE:  Analyzing for isolated edges. Please wait...
 NOTICE:  Analyzing for ring geometries. Please wait...
 NOTICE:  Analyzing for intersections. Please wait...
 NOTICE:              ANALYSIS RESULTS FOR SELECTED EDGES:
 NOTICE:                    Isolated segments: 1
 NOTICE:                            Dead ends: 7
 NOTICE:  Potential gaps found near dead ends: 1
 NOTICE:               Intersections detected: 0
 NOTICE:                      Ring geometries: 0
OK
 NOTICE:  column "old_id" of relation "edge_table" does not exist, skipping
 NOTICE:  PROCESSING:
 NOTICE:  pgr_createTopology('edge_table',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait .....
 NOTICE:  Creating Topology, Please wait...
 NOTICE:  -------------> TOPOLOGY CREATED FOR  22 edges
 NOTICE:  Rows with NULL geometry or NULL id: 0
 NOTICE:  Vertices table for table public.edge_table is: public.edge_table_vertices_pgr
 NOTICE:  ----------------------------------------------
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_analizeGraph('edge_table',0.001,'the_geom','id','source','target','id not in (select old_id from edge_table where old_id is not null)')
 NOTICE:  Performing checks, pelase wait...
 NOTICE:  Analyzing for dead ends. Please wait...
 NOTICE:  Analyzing for gaps. Please wait...
 NOTICE:  Analyzing for isolated edges. Please wait...
 NOTICE:  Analyzing for ring geometries. Please wait...
 NOTICE:  Analyzing for intersections. Please wait...
 NOTICE:              ANALYSIS RESULTS FOR SELECTED EDGES:
 NOTICE:                    Isolated segments: 1
 NOTICE:                            Dead ends: 5
 NOTICE:  Potential gaps found near dead ends: 1
 NOTICE:               Intersections detected: 4
 NOTICE:                      Ring geometries: 0
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_analizeGraph('edge_table',0.001,'the_geom','id','source','target','old_id is null')
 NOTICE:  Performing checks, pelase wait...
 NOTICE:  Analyzing for dead ends. Please wait...
 NOTICE:  Analyzing for gaps. Please wait...
 NOTICE:  Analyzing for isolated edges. Please wait...
 NOTICE:  Analyzing for ring geometries. Please wait...
 NOTICE:  Analyzing for intersections. Please wait...
 NOTICE:              ANALYSIS RESULTS FOR SELECTED EDGES:
 NOTICE:                    Isolated segments: 1
 NOTICE:                            Dead ends: 5
 NOTICE:  Potential gaps found near dead ends: 1
 NOTICE:               Intersections detected: 5
 NOTICE:                      Ring geometries: 0
OK
 NOTICE:  PROCESSING:
 NOTICE:  pgr_analizeGraph('edge_table',0.001,'the_geom','id','source','target','true')
 NOTICE:  Performing checks, pelase wait...
 NOTICE:  Analyzing for dead ends. Please wait...
 NOTICE:  Analyzing for gaps. Please wait...
 NOTICE:  Analyzing for isolated edges. Please wait...
 NOTICE:  Analyzing for ring geometries. Please wait...
 NOTICE:  Analyzing for intersections. Please wait...
 NOTICE:              ANALYSIS RESULTS FOR SELECTED EDGES:
 NOTICE:                    Isolated segments: 1
 NOTICE:                            Dead ends: 5
 NOTICE:  Potential gaps found near dead ends: 1
 NOTICE:               Intersections detected: 5
 NOTICE:                      Ring geometries: 0
OK
